service:
  name: typescript-serverless-graphql

plugins:
  - serverless-webpack
  - serverless-dynamodb-local
  - serverless-offline

provider:
  name: aws
  runtime: nodejs10.x
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": ["Assets", "Arn"] }
        - { "Fn::GetAtt": ["Orders", "Arn"] }

functions:
  rpmInvestimentosGQL:
    handler: src/handler.graphql
    events:
      - http:
          path: investments-gql-api
          method: any
          cors: true
    environment:
      ASSETS_TABLE: { "Ref": "Assets" }
      ORDERS_TABLE: { "Ref": "Orders" }

resources:
  Resources:
    Assets:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: assets
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    Orders:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: orders
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

custom:
  dynamodb:
    start:
      migrate: true
    stages:
      - dev
      - test
